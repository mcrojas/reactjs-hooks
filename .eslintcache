[{"/home/mary/reactjs/react-hooks/src/reportWebVitals.js":"1","/home/mary/reactjs/react-hooks/src/App.js":"2","/home/mary/reactjs/react-hooks/src/components/Header.jsx":"3","/home/mary/reactjs/react-hooks/src/components/Characters.jsx":"4","/home/mary/reactjs/react-hooks/src/context/ThemeContext.js":"5","/home/mary/reactjs/react-hooks/src/index.js":"6","/home/mary/reactjs/react-hooks/src/components/Search.jsx":"7"},{"size":362,"mtime":1610024684866,"results":"8","hashOfConfig":"9"},{"size":265,"mtime":1610032392827,"results":"10","hashOfConfig":"9"},{"size":2862,"mtime":1610038863069,"results":"11","hashOfConfig":"9"},{"size":3232,"mtime":1612356556290,"results":"12","hashOfConfig":"9"},{"size":103,"mtime":1610032767461,"results":"13","hashOfConfig":"9"},{"size":622,"mtime":1610033257329,"results":"14","hashOfConfig":"9"},{"size":1117,"mtime":1612267824579,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1myj6hd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mary/reactjs/react-hooks/src/reportWebVitals.js",[],["34","35"],"/home/mary/reactjs/react-hooks/src/App.js",[],["36","37"],"/home/mary/reactjs/react-hooks/src/components/Header.jsx",["38","39","40","41"],"import React, {useState, useContext} from 'react'\nimport ThemeContext from '../context/ThemeContext'\n\nconst Header = () => {\n    const [darkMode, setDarkMode] = useState(false);\n    const color = useContext(!darkMode)\n\n    const handleClick = () => {\n        setDarkMode(!darkMode)\n    }\n\n    return (\n        <div className=\"Header\">\n            <nav id=\"header\" class=\"w-full z-30 py-1 bg-white shadow-lg border-b border-blue-400 \">\n                <div class=\"w-full flex items-center justify-between mt-0 px-6 py-2\">\n                    <label for=\"menu-toggle\" class=\"cursor-pointer md:hidden block\">\n                        <svg class=\"fill-current text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n                        <title>menu</title>\n                        <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"></path>\n                        </svg>\n                    </label>\n                    <input class=\"hidden\" type=\"checkbox\" id=\"menu-toggle\" />\n                    \n                    <div class=\"hidden md:flex md:items-center md:w-auto w-full order-3 md:order-1\" id=\"menu\">\n                        <nav>\n                        <ul class=\"md:flex items-center justify-between text-base text-blue-600 pt-4 md:pt-0\">\n                            <li><a class=\"inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2\" href=\"#\">Home</a></li>\n                            <li><a class=\"inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2\" href=\"#\">Products</a></li>\n                            <li><a class=\"inline-block no-underline hover:text-black font-medium text-lg py-2 px-4 lg:-ml-2\" href=\"#\">About</a></li>\n                        </ul>\n                        </nav>\n                    </div>\n                    \n                    <div class=\"order-2 md:order-3 flex flex-wrap items-center justify-end mr-0 md:mr-4\" id=\"nav-content\">\n                        <div class=\"auth flex items-center w-full md:w-full\">\n                        <button class=\"bg-transparent text-gray-800  p-2 rounded border border-gray-300 mr-4 hover:bg-gray-100 hover:text-gray-700\">Sign in</button>\n                        <button class=\"bg-blue-600 text-gray-200  p-2 rounded  hover:bg-blue-500 hover:text-gray-100\">Sign up</button>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n            <h1 style={{color}} className=\"text-lg text-center font-semibold py-4\">React hooks</h1>\n            <button className=\"hidden\" type=\"button\" onClick={handleClick}>{darkMode ? 'Dark Mode' : 'Light Mode'}</button>\n            <button className=\"hidden\" type=\"button\" onClick={() => setDarkMode(!darkMode)}>{darkMode ? 'Dark Mode 2' : 'Light Mode'}</button>\n        </div>\n    )\n}\n\nexport default Header\n","/home/mary/reactjs/react-hooks/src/components/Characters.jsx",[],"/home/mary/reactjs/react-hooks/src/context/ThemeContext.js",[],"/home/mary/reactjs/react-hooks/src/index.js",[],["42","43"],"/home/mary/reactjs/react-hooks/src/components/Search.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":27,"column":33,"nodeType":"56","endLine":27,"endColumn":135},{"ruleId":"54","severity":1,"message":"55","line":28,"column":33,"nodeType":"56","endLine":28,"endColumn":135},{"ruleId":"54","severity":1,"message":"55","line":29,"column":33,"nodeType":"56","endLine":29,"endColumn":135},{"ruleId":"44","replacedBy":"57"},{"ruleId":"46","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"no-unused-vars","'ThemeContext' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["59"],["60"],"no-global-assign","no-unsafe-negation"]